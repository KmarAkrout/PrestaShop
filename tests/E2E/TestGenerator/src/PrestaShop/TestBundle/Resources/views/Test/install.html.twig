 {% extends "PrestaShopTestBundle::layout.html.twig" %} {% block title %} install-upgrade Test - {{ parent() }} {% endblock %} {%
block prestaShopTest_body %}

<script type="text/javascript">
  ////////////****/////////*********////////*****

  function changeFunc() {

    var DivToAdd = document.getElementById('IdDiv');
    var DivToAdd1 = document.getElementById('DivToAdd1');
    var divBtn1 = document.getElementById('divBtn1');
    var selectBox = document.getElementById("PathSelect");
    var selectedValue = selectBox.options[selectBox.selectedIndex].value;
    var selectBox2 = document.getElementById("Myselect");
    var DivPath1 = document.getElementById('DivPath1');
    var alert = document.getElementById('alertId');
    var alert1 = document.getElementById('AlertePath');

    var module1 = document.getElementById('module1');

    var divMod1 = document.getElementById('divMod1');
    var selectedValue1;
    var path;

    path = selectedValue;
    var selectedId = selectBox.options[selectBox.selectedIndex].id;

    var list;
    if (document.getElementById('li' + selectedId) != null) {
      list = document.getElementById('li' + selectedId).getAttribute('data-value');
    } else {
      list = "";

    }
    var res = list.split("***");
    var res1 = res[0].split("\n");
    var j;
    var z;
    var Sub;
    var res2;
    for (j = 1; j < res.length; j++) {
      var n = res[j].lastIndexOf('.');


      Sub = res[j].substring(0, n + 3);
      res2 = Sub.split("\n");
      var concat;
      for (z = 1; z < res2.length; z++) {

        concat = res2[0] + res2[z];
        var n1 = concat.indexOf("/");
        var sub1 = concat.substring(0, n1 + 1);
        var rep = concat.replace(sub1, '');
        var rep1 = rep.replace(":", "/");
        res1.push(rep1);
      }





    }


    if (selectedValue == "01_install.js") {
      alert.hidden = false;
    } else {
      alert.hidden = true;
    }

    if (document.getElementById('Myselect') == null && list != "") {
      var i;
      tempSelect = document.createElement('select');
      tempSelect.setAttribute("name", "file");
      tempSelect.setAttribute("id", "Myselect");
      tempSelect.setAttribute("class", "form-control");
      tempSelect.setAttribute("onchange", "changeSel2()");
      DivToAdd1.appendChild(tempSelect);
      var extension;

      option0 = document.createElement("option");
      option0.setAttribute("disabled", "true");
      option0.setAttribute("selected", "true");
      option0.setAttribute("value", "");
      option0.innerHTML = "-- choisir un fichier --";
      tempSelect.appendChild(option0);
      for (i = 1; i < res1.length; i++) {
        extension = res1[i].slice(-3);

        if (res1[i] != '' && res1[i].includes('.js')) {
          var option = document.createElement("option");
          option.value = res1[i];
          option.text = res1[i];

          tempSelect.appendChild(option);
        }
      }

    } else if (document.getElementById('Myselect') != null && list != "") {
      DivToAdd1.removeChild(tempSelect);
      var i;
      tempSelect = document.createElement('select');
      tempSelect.setAttribute("name", "file");
      tempSelect.setAttribute("id", "Myselect");
      tempSelect.setAttribute("class", "form-control");
      tempSelect.setAttribute("onchange", "changeSel2()");
      DivToAdd1.appendChild(tempSelect);
      var extension;

      option0 = document.createElement("option");
      option0.setAttribute("disabled", "true");
      option0.setAttribute("selected", "true");
      option0.setAttribute("value", "");
      option0.innerHTML = "-- choisir un fichier --";
      tempSelect.appendChild(option0);
      for (i = 1; i < res1.length; i++) {
        extension = res1[i].slice(-3);

        if (res1[i] != '' && res1[i].includes('.js')) {
          var option = document.createElement("option");
          option.value = res1[i];
          option.text = res1[i];

          tempSelect.appendChild(option);
        }
      }

    } else if (document.getElementById('Myselect') != null && list == "") {
      DivToAdd1.removeChild(tempSelect);

    }


  }
  ///////***** creation des champs optionnels ****/////
  //// URL//////
  function handleChangeUrl(checkbox) {
    divUrl = document.getElementById('divUrl');
    if (checkbox.checked == true) {
      if (document.getElementById('idUrl') == null) {
        newlabel1 = document.createElement("Label");
        newlabel1.setAttribute("for", "url");
        newlabel1.innerHTML = "Url (OPTIONAL):";
        divUrl.appendChild(newlabel1);


        tempInput1 = document.createElement('input');
        tempInput1.setAttribute("type", "text");
        tempInput1.setAttribute("id", "idUrl");
        tempInput1.setAttribute("name", "url");
        tempInput1.setAttribute("placeholder", "default to 'localhost'");
        tempInput1.setAttribute("class", "form-control");
        divUrl.appendChild(tempInput1);
        divUrl.hidden = false;
      }
    } else {
      divUrl.removeChild(tempInput1);
      divUrl.removeChild(newlabel1);
      divUrl.hidden = true;

    }
  }
  //// Language//////
  function handleChangeLan(checkbox) {
    divLan = document.getElementById('divLan');
    if (checkbox.checked == true) {
      if (document.getElementById('idLan') == null) {
        newlabel2 = document.createElement("Label");
        newlabel2.setAttribute("for", "language");
        newlabel2.innerHTML = "Language (OPTIONAL):";
        divLan.appendChild(newlabel2);


        tempInput2 = document.createElement('input');
        tempInput2.setAttribute("type", "text");
        tempInput2.setAttribute("id", "idLan");
        tempInput2.setAttribute("name", "language");
        tempInput2.setAttribute("placeholder", "default to 'en'");
        tempInput2.setAttribute("class", "form-control");
        divLan.appendChild(tempInput2);
        divLan.hidden = false;
      }
    } else {
      divLan.removeChild(tempInput2);
      divLan.removeChild(newlabel2);
      divLan.hidden = true;

    }
  }
  //// Country//////
  function handleChangeCou(checkbox) {
    divCou = document.getElementById('divCou');
    if (checkbox.checked == true) {
      if (document.getElementById('idCou') == null) {
        newlabel3 = document.createElement("Label");
        newlabel3.setAttribute("for", "country");
        newlabel3.innerHTML = "Country (OPTIONAL):";
        divCou.appendChild(newlabel3);


        tempInput3 = document.createElement('input');
        tempInput3.setAttribute("type", "text");
        tempInput3.setAttribute("id", "idCou");
        tempInput3.setAttribute("name", "country");
        tempInput3.setAttribute("placeholder", "default to 'france'");
        tempInput3.setAttribute("class", "form-control");
        divCou.appendChild(tempInput3);
        divCou.hidden = false;
      }
    } else {
      divCou.removeChild(tempInput3);
      divCou.removeChild(newlabel3);
      divCou.hidden = true;

    }
  }
  //// DB_SERVER//////
  function handleChangeDbS(checkbox) {
    divDbS = document.getElementById('divDbS');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbS') == null) {
        newlabel4 = document.createElement("Label");
        newlabel4.setAttribute("for", "dbServer");
        newlabel4.innerHTML = "Db_Server (OPTIONAL):";
        divDbS.appendChild(newlabel4);


        tempInput4 = document.createElement('input');
        tempInput4.setAttribute("type", "text");
        tempInput4.setAttribute("id", "idDbS");
        tempInput4.setAttribute("name", "dbServer");
        tempInput4.setAttribute("placeholder", "default to 'mysql'");
        tempInput4.setAttribute("class", "form-control");
        divDbS.appendChild(tempInput4);
        divDbS.hidden = false;
      }
    } else {
      divDbS.removeChild(tempInput4);
      divDbS.removeChild(newlabel4);
      divDbS.hidden = true;

    }
  }
  //// DB_User//////
  function handleChangeDbU(checkbox) {
    divDbU = document.getElementById('divDbU');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbU') == null) {
        newlabel5 = document.createElement("Label");
        newlabel5.setAttribute("for", "dbUser");
        newlabel5.innerHTML = "Db_User (OPTIONAL):";
        divDbU.appendChild(newlabel5);


        tempInput5 = document.createElement('input');
        tempInput5.setAttribute("type", "text");
        tempInput5.setAttribute("id", "idDbU");
        tempInput5.setAttribute("name", "dbUser");
        tempInput5.setAttribute("placeholder", "default to 'root'");
        tempInput5.setAttribute("class", "form-control");
        divDbU.appendChild(tempInput5);
        divDbU.hidden = false;
      }
    } else {
      divDbU.removeChild(tempInput5);
      divDbU.removeChild(newlabel5);
      divDbU.hidden = true;

    }
  }
  //// DB_PWD//////
  function handleChangePwd(checkbox) {
    divDbP = document.getElementById('divDbP');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbP') == null) {
        newlabel6 = document.createElement("Label");
        newlabel6.setAttribute("for", "dbPwd");
        newlabel6.innerHTML = "Db_Password (OPTIONAL):";
        divDbP.appendChild(newlabel6);


        tempInput6 = document.createElement('input');
        tempInput6.setAttribute("type", "text");
        tempInput6.setAttribute("id", "idDbP");
        tempInput6.setAttribute("name", "dbPwd");
        tempInput6.setAttribute("placeholder", "default to 'doge'");
        tempInput6.setAttribute("class", "form-control");
        divDbP.appendChild(tempInput6);
        divDbP.hidden = false;
      }
    } else {
      divDbP.removeChild(tempInput6);
      divDbP.removeChild(newlabel6);
      divDbP.hidden = true;

    }
  }
  //// DB_E_PWD//////
  function handleChangeEPwd(checkbox) {
    divDbEP = document.getElementById('divDbEP');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbEP') == null) {
        newlabel7 = document.createElement("Label");
        newlabel7.setAttribute("for", "dbEPwd");
        newlabel7.innerHTML = "Db_Empty_Password (OPTIONAL):";
        divDbEP.appendChild(newlabel7);
        tempInput7 = document.createElement('select');
        tempInput7.setAttribute("id", "idDbEP");
        tempInput7.setAttribute("name", "dbEPwd");
        tempInput7.setAttribute("class", "form-control");
        option1 = document.createElement("option");
        option1.setAttribute("value", "true");
        option1.innerHTML = "True";
        option2 = document.createElement("option");
        option2.setAttribute("value", "false");
        option2.innerHTML = "False";
        tempInput7.appendChild(option1);
        tempInput7.appendChild(option2);
        sm = document.createElement("small");
        sm.setAttribute("class", "form-text text-muted");
        sm.innerHTML = "Si vous n'avez pas un mot de passe, choisir 'True'.";
        divDbEP.appendChild(tempInput7);
        divDbEP.appendChild(sm);
        divDbEP.hidden = false;
      }
    } else {
      divDbEP.removeChild(tempInput7);
      divDbEP.removeChild(newlabel7);
      divDbEP.removeChild(sm);
      divDbEP.hidden = true;

    }
  }

  function handleChangeLink(checkbox) {
    divLink = document.getElementById('divLink');
    divFile = document.getElementById('divFile');
    if (document.getElementById('idFile') != null) {
      swal({
        title: "Attention !",
        text: "Vous ne pouvez pas définir les champs RC_LINK et File_Name en même temps (Décocher FILE_NAME)",
        icon: "error",
        button: "D'accord",
      });
      checkbox.checked = false;
      return false;
    }
    if (checkbox.checked == true) {
      if (document.getElementById('idLink') == null) {
        newlabel8 = document.createElement("Label");
        newlabel8.setAttribute("for", "link");
        newlabel8.innerHTML = "RC_LINK :";
        divLink.appendChild(newlabel8);


        tempInput8 = document.createElement('input');
        tempInput8.setAttribute("type", "text");
        tempInput8.setAttribute("id", "idLink");
        tempInput8.setAttribute("name", "link");
        tempInput8.setAttribute("required", "true");
        tempInput8.setAttribute("placeholder", "RC Download link");
        tempInput8.setAttribute("class", "form-control");
        sm8 = document.createElement("small");
        sm8.setAttribute("class", "form-text text-muted");
        sm8.setAttribute("id", "LinkHelp");
        sm8.innerHTML =
          "si vous avez déjà téléchargé la RC, vous devez copier le fichier ZIP dans le fichier --RCTARGET admin-dev / autoupgrade / download / et définir l'option FILENAME.";
        divLink.appendChild(tempInput8);
        divLink.appendChild(sm8);
        divLink.hidden = false;
      }
    } else {
      if (typeof tempInput8 === "undefined" && typeof newlabel8 === "undefined" && typeof sm8 === "undefined") {
        divLink.removeChild(document.getElementById("idLink"));
        divLink.removeChild(document.getElementById("idLinkLabel"));
        divLink.removeChild(document.getElementById("LinkHelp"));
        ///*****/// Creation du champs File Name ///****///
        document.getElementById('fileName').checked = true;
        newlabel9 = document.createElement("Label");
        newlabel9.setAttribute("for", "fileName");
        newlabel9.innerHTML = "File Name (OPTIONAL):";
        divFile.appendChild(newlabel9);


        tempInput9 = document.createElement('input');
        tempInput9.setAttribute("type", "text");
        tempInput9.setAttribute("placeholder", "Nom du fichier RC");
        tempInput9.setAttribute("required", "true");
        tempInput9.setAttribute("id", "idFile");
        tempInput9.setAttribute("name", "fileName");
        tempInput9.setAttribute("class", "form-control");
        divFile.appendChild(tempInput9);
        divFile.hidden = false;
      } else {

        divLink.removeChild(tempInput8);
        divLink.removeChild(newlabel8);
        divLink.removeChild(sm8);
        //*****/////// creation du champs File Name ****///////
        document.getElementById('fileName').checked = true;
        newlabel9 = document.createElement("Label");
        newlabel9.setAttribute("for", "fileName");
        newlabel9.innerHTML = "File Name (OPTIONAL):";
        divFile.appendChild(newlabel9);


        tempInput9 = document.createElement('input');
        tempInput9.setAttribute("type", "text");
        tempInput9.setAttribute("placeholder", "Nom du fichier RC");
        tempInput9.setAttribute("required", "true");
        tempInput9.setAttribute("id", "idFile");
        tempInput9.setAttribute("name", "fileName");
        tempInput9.setAttribute("class", "form-control");
        divFile.appendChild(tempInput9);
        divFile.hidden = false;
      }
      divLink.hidden = true;

    }
  }
  //// FileName//////
  function handleChangeFile(checkbox) {
    divFile = document.getElementById('divFile');
    if (document.getElementById('idLink') != null) {
      swal({
        title: "Attention !",
        text: "Vous ne pouvez pas définir les champs RC_LINK et File_Name en même temps (Décocher RC_LINK)",
        icon: "error",
        button: "D'accord",
      });
      checkbox.checked = false;
      return false;
    }
    if (checkbox.checked == true) {
      if (document.getElementById('idFile') == null) {
        newlabel9 = document.createElement("Label");
        newlabel9.setAttribute("for", "fileName");
        newlabel9.innerHTML = "File Name (OPTIONAL):";
        divFile.appendChild(newlabel9);


        tempInput9 = document.createElement('input');
        tempInput9.setAttribute("type", "text");
        tempInput9.setAttribute("placeholder", "Nom du fichier RC");
        tempInput9.setAttribute("required", "true");
        tempInput9.setAttribute("id", "idFile");
        tempInput9.setAttribute("name", "fileName");
        tempInput9.setAttribute("class", "form-control");
        divFile.appendChild(tempInput9);
        divFile.hidden = false;
      }
    } else {
      //////******* creation du champ rc link ******//////
      document.getElementById('rcLink').checked = true;
      newlabel8 = document.createElement("Label");
      newlabel8.setAttribute("for", "link");
      newlabel8.innerHTML = "RC_LINK :";
      divLink.appendChild(newlabel8);
      tempInput8 = document.createElement('input');
      tempInput8.setAttribute("type", "text");
      tempInput8.setAttribute("id", "idLink");
      tempInput8.setAttribute("name", "link");
      tempInput8.setAttribute("required", "true");
      tempInput8.setAttribute("placeholder", "RC Download link");
      tempInput8.setAttribute("class", "form-control");
      sm8 = document.createElement("small");
      sm8.setAttribute("class", "form-text text-muted");
      sm8.setAttribute("id", "LinkHelp");
      sm8.innerHTML =
        "si vous avez déjà téléchargé la RC, vous devez copier le fichier ZIP dans le fichier --RCTARGET admin-dev / autoupgrade / download / et définir l'option FILENAME.";
      divLink.appendChild(tempInput8);
      divLink.appendChild(sm8);
      divLink.hidden = false;

      divFile.removeChild(tempInput9);
      divFile.removeChild(newlabel9);
      divFile.hidden = true;

    }
  }

  function handleChangeHead(checkbox) {

    if (checkbox.checked == true) {
      document.getElementById('headAlert').hidden = false;

    } else {
      document.getElementById('headAlert').hidden = true;


    }
  }

  function handleChangeHead1(checkbox) {

    if (checkbox.checked == true) {
      document.getElementById('headAlert1').hidden = false;

    } else {
      document.getElementById('headAlert1').hidden = true;


    }
  }
  ////////******* creation des champs optionnels du test spécifique *******//////////

  //// URL//////
  function handleChangeUrl1(checkbox) {
    divUrl1 = document.getElementById('divUrl1');
    if (checkbox.checked == true) {
      if (document.getElementById('idUrl1') == null) {
        newlabel11 = document.createElement("Label");
        newlabel11.setAttribute("for", "url1");
        newlabel11.innerHTML = "Url (OPTIONAL):";
        divUrl1.appendChild(newlabel11);


        tempInput11 = document.createElement('input');
        tempInput11.setAttribute("type", "text");
        tempInput11.setAttribute("id", "idUrl1");
        tempInput11.setAttribute("name", "url1");
        tempInput11.setAttribute("placeholder", "default to 'localhost'");
        tempInput11.setAttribute("class", "form-control");
        divUrl1.appendChild(tempInput11);
        divUrl1.hidden = false;
      }
    } else {
      divUrl1.removeChild(tempInput11);
      divUrl1.removeChild(newlabel11);
      divUrl1.hidden = true;

    }
  }
  //// Language//////
  function handleChangeLan1(checkbox) {
    divLan1 = document.getElementById('divLan1');
    if (checkbox.checked == true) {
      if (document.getElementById('idLan1') == null) {
        newlabel12 = document.createElement("Label");
        newlabel12.setAttribute("for", "language1");
        newlabel12.innerHTML = "Language (OPTIONAL):";
        divLan1.appendChild(newlabel12);


        tempInput12 = document.createElement('input');
        tempInput12.setAttribute("type", "text");
        tempInput12.setAttribute("id", "idLan1");
        tempInput12.setAttribute("name", "language1");
        tempInput12.setAttribute("placeholder", "default to 'en'");
        tempInput12.setAttribute("class", "form-control");
        divLan1.appendChild(tempInput12);
        divLan1.hidden = false;
      }
    } else {
      divLan1.removeChild(tempInput12);
      divLan1.removeChild(newlabel12);
      divLan1.hidden = true;

    }
  }
  //// Country//////
  function handleChangeCou1(checkbox) {
    divCou1 = document.getElementById('divCou1');
    if (checkbox.checked == true) {
      if (document.getElementById('idCou1') == null) {
        newlabel13 = document.createElement("Label");
        newlabel13.setAttribute("for", "country1");
        newlabel13.innerHTML = "Country (OPTIONAL):";
        divCou1.appendChild(newlabel13);


        tempInput13 = document.createElement('input');
        tempInput13.setAttribute("type", "text");
        tempInput13.setAttribute("id", "idCou1");
        tempInput13.setAttribute("name", "country1");
        tempInput13.setAttribute("placeholder", "default to 'france'");
        tempInput13.setAttribute("class", "form-control");
        divCou1.appendChild(tempInput13);
        divCou1.hidden = false;
      }
    } else {
      divCou1.removeChild(tempInput13);
      divCou1.removeChild(newlabel13);
      divCou1.hidden = true;

    }
  }
  //// DB_SERVER//////
  function handleChangeDbS1(checkbox) {
    divDbS1 = document.getElementById('divDbS1');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbS1') == null) {
        newlabel14 = document.createElement("Label");
        newlabel14.setAttribute("for", "dbServer1");
        newlabel14.innerHTML = "Db_Server (OPTIONAL):";
        divDbS1.appendChild(newlabel14);


        tempInput14 = document.createElement('input');
        tempInput14.setAttribute("type", "text");
        tempInput14.setAttribute("id", "idDbS1");
        tempInput14.setAttribute("name", "dbServer1");
        tempInput14.setAttribute("placeholder", "default to 'mysql'");
        tempInput14.setAttribute("class", "form-control");
        divDbS1.appendChild(tempInput14);
        divDbS1.hidden = false;
      }
    } else {
      divDbS1.removeChild(tempInput14);
      divDbS1.removeChild(newlabel14);
      divDbS1.hidden = true;

    }
  }
  //// DB_User//////
  function handleChangeDbU1(checkbox) {
    divDbU1 = document.getElementById('divDbU1');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbU1') == null) {
        newlabel15 = document.createElement("Label");
        newlabel15.setAttribute("for", "dbUser1");
        newlabel15.innerHTML = "Db_User (OPTIONAL):";
        divDbU1.appendChild(newlabel15);


        tempInput15 = document.createElement('input');
        tempInput15.setAttribute("type", "text");
        tempInput15.setAttribute("id", "idDbU1");
        tempInput15.setAttribute("name", "dbUser1");
        tempInput15.setAttribute("placeholder", "default to 'root'");
        tempInput15.setAttribute("class", "form-control");
        divDbU1.appendChild(tempInput15);
        divDbU1.hidden = false;
      }
    } else {
      divDbU1.removeChild(tempInput15);
      divDbU1.removeChild(newlabel15);
      divDbU1.hidden = true;

    }
  }
  //// DB_PWD//////
  function handleChangePwd1(checkbox) {
    divDbP1 = document.getElementById('divDbP1');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbP1') == null) {
        newlabel16 = document.createElement("Label");
        newlabel16.setAttribute("for", "dbPwd1");
        newlabel16.innerHTML = "Db_Password (OPTIONAL):";
        divDbP1.appendChild(newlabel16);


        tempInput16 = document.createElement('input');
        tempInput16.setAttribute("type", "text");
        tempInput16.setAttribute("id", "idDbP1");
        tempInput16.setAttribute("name", "dbPwd1");
        tempInput16.setAttribute("placeholder", "default to 'doge'");
        tempInput16.setAttribute("class", "form-control");
        divDbP1.appendChild(tempInput16);
        divDbP1.hidden = false;
      }
    } else {
      divDbP1.removeChild(tempInput16);
      divDbP1.removeChild(newlabel16);
      divDbP1.hidden = true;

    }
  }
  //// DB_E_PWD//////
  function handleChangeEPwd1(checkbox) {
    divDbEP1 = document.getElementById('divDbEP1');
    if (checkbox.checked == true) {
      if (document.getElementById('idDbEP1') == null) {
        newlabel17 = document.createElement("Label");
        newlabel17.setAttribute("for", "dbEPwd1");
        newlabel17.innerHTML = "Db_Empty_Password (OPTIONAL):";
        divDbEP1.appendChild(newlabel17);
        tempInput17 = document.createElement('select');
        tempInput17.setAttribute("id", "idDbEP1");
        tempInput17.setAttribute("name", "dbEPwd1");
        tempInput17.setAttribute("class", "form-control");
        option11 = document.createElement("option");
        option11.setAttribute("value", "true");
        option11.innerHTML = "True";
        option12 = document.createElement("option");
        option12.setAttribute("value", "false");
        option12.innerHTML = "False";
        tempInput17.appendChild(option11);
        tempInput17.appendChild(option12);
        sm1 = document.createElement("small");
        sm1.setAttribute("class", "form-text text-muted");
        sm1.innerHTML = "Si vous n'avez pas un mot de passe, choisir 'True'.";
        divDbEP1.appendChild(tempInput17);
        divDbEP1.appendChild(sm1);
        divDbEP1.hidden = false;
      }
    } else {
      divDbEP1.removeChild(tempInput17);
      divDbEP1.removeChild(newlabel17);
      divDbEP1.removeChild(sm1);
      divDbEP1.hidden = true;

    }
  }

  function handleChangeLink1(checkbox) {
    divLink1 = document.getElementById('divLink1');
    divFile1 = document.getElementById('divFile1');
    if (document.getElementById('idFile1') != null) {
      swal({
        title: "Attention !",
        text: "Vous ne pouvez pas définir les champs RC_LINK et File_Name en même temps (Décocher FILE_NAME)",
        icon: "error",
        button: "D'accord",
      });
      checkbox.checked = false;
      return false;
    }
    if (checkbox.checked == true) {
      if (document.getElementById('idLink1') == null) {
        newlabel18 = document.createElement("Label");
        newlabel18.setAttribute("for", "link1");
        newlabel18.innerHTML = "RC_LINK :";
        divLink1.appendChild(newlabel18);


        tempInput18 = document.createElement('input');
        tempInput18.setAttribute("type", "text");
        tempInput18.setAttribute("id", "idLink1");
        tempInput18.setAttribute("name", "link1");
        tempInput18.setAttribute("required", "true");
        tempInput18.setAttribute("placeholder", "RC Download link");
        tempInput18.setAttribute("class", "form-control");
        sm18 = document.createElement("small");
        sm18.setAttribute("class", "form-text text-muted");
        sm18.setAttribute("id", "LinkHelp1");
        sm18.innerHTML =
          "si vous avez déjà téléchargé la RC, vous devez copier le fichier ZIP dans le fichier --RCTARGET admin-dev / autoupgrade / download / et définir l'option FILENAME.";
        divLink1.appendChild(tempInput18);
        divLink1.appendChild(sm18);
        divLink1.hidden = false;
      }
    } else {
      if (typeof tempInput18 === "undefined" && typeof newlabel18 === "undefined" && typeof sm18 === "undefined") {
        divLink1.removeChild(document.getElementById("idLink1"));
        divLink1.removeChild(document.getElementById("idLinkLabel1"));
        divLink1.removeChild(document.getElementById("LinkHelp1"));
        ///*****/// Creation du champs File Name ///****///
        document.getElementById('fileName1').checked = true;
        newlabel19 = document.createElement("Label");
        newlabel19.setAttribute("for", "fileName1");
        newlabel19.innerHTML = "File Name (OPTIONAL):";
        divFile1.appendChild(newlabel19);


        tempInput19 = document.createElement('input');
        tempInput19.setAttribute("type", "text");
        tempInput19.setAttribute("placeholder", "Nom du fichier RC");
        tempInput19.setAttribute("required", "true");
        tempInput19.setAttribute("id", "idFile1");
        tempInput19.setAttribute("name", "fileName1");
        tempInput19.setAttribute("class", "form-control");
        divFile1.appendChild(tempInput19);
        divFile1.hidden = false;
      } else {

        divLink1.removeChild(tempInput18);
        divLink1.removeChild(newlabel18);
        divLink1.removeChild(sm18);
        //*****/////// creation du champs File Name ****///////
        document.getElementById('fileName1').checked = true;
        newlabel19 = document.createElement("Label");
        newlabel19.setAttribute("for", "fileName1");
        newlabel19.innerHTML = "File Name (OPTIONAL):";
        divFile1.appendChild(newlabel19);


        tempInput19 = document.createElement('input');
        tempInput19.setAttribute("type", "text");
        tempInput19.setAttribute("placeholder", "Nom du fichier RC");
        tempInput19.setAttribute("required", "true");
        tempInput19.setAttribute("id", "idFile1");
        tempInput19.setAttribute("name", "fileName1");
        tempInput19.setAttribute("class", "form-control");
        divFile1.appendChild(tempInput19);
        divFile1.hidden = false;
      }
      divLink1.hidden = true;

    }
  }
  //// FileName//////
  function handleChangeFile1(checkbox) {
    divFile1 = document.getElementById('divFile1');
    if (document.getElementById('idLink1') != null) {
      swal({
        title: "Attention !",
        text: "Vous ne pouvez pas définir les champs RC_LINK et File_Name en même temps (Décocher RC_LINK) ",
        icon: "error",
        button: "D'accord",
      });
      checkbox.checked = false;
      return false;
    }
    if (checkbox.checked == true) {
      if (document.getElementById('idFile1') == null) {
        newlabel19 = document.createElement("Label");
        newlabel19.setAttribute("for", "fileName1");
        newlabel19.innerHTML = "File Name (OPTIONAL):";
        divFile1.appendChild(newlabel19);


        tempInput19 = document.createElement('input');
        tempInput19.setAttribute("type", "text");
        tempInput19.setAttribute("placeholder", "Nom du fichier RC");
        tempInput19.setAttribute("required", "true");
        tempInput19.setAttribute("id", "idFile1");
        tempInput19.setAttribute("name", "fileName1");
        tempInput19.setAttribute("class", "form-control");
        divFile1.appendChild(tempInput19);
        divFile1.hidden = false;
      }
    } else {
      //////******* creation du champ rc link ******//////
      document.getElementById('rcLink1').checked = true;
      newlabel18 = document.createElement("Label");
      newlabel18.setAttribute("for", "link1");
      newlabel18.innerHTML = "RC_LINK :";
      divLink1.appendChild(newlabel18);
      tempInput18 = document.createElement('input');
      tempInput18.setAttribute("type", "text");
      tempInput18.setAttribute("id", "idLink1");
      tempInput18.setAttribute("name", "link1");
      tempInput18.setAttribute("required", "true");
      tempInput18.setAttribute("placeholder", "RC Download link");
      tempInput18.setAttribute("class", "form-control");
      sm18 = document.createElement("small");
      sm18.setAttribute("class", "form-text text-muted");
      sm18.setAttribute("id", "LinkHelp1");
      sm18.innerHTML =
        "si vous avez déjà téléchargé la RC, vous devez copier le fichier ZIP dans le fichier --RCTARGET admin-dev / autoupgrade / download / et définir l'option FILENAME.";
      divLink1.appendChild(tempInput18);
      divLink1.appendChild(sm18);
      divLink1.hidden = false;

      divFile1.removeChild(tempInput19);
      divFile1.removeChild(newlabel19);
      divFile1.hidden = true;

    }
  }

  function generateCmd() {
    headless = document.getElementById('headless');
    dir = document.getElementById('idDir').value;
    last = document.getElementById('idLast').value;
    target = document.getElementById('idTarget').value;
    link = document.getElementById('idLink');
    url = document.getElementById('idUrl');
    language = document.getElementById('idLan');
    country = document.getElementById('idCou');
    db_s = document.getElementById('idDbS');
    db_u = document.getElementById('idDbU');
    db_p = document.getElementById('idDbP');
    db_ep = document.getElementById('idDbEP');
    fileName = document.getElementById('idFile');

    if (headless.checked) {
      headless = ' --HEADLESS=true';
    } else {
      headless = '';
    }
    if (dir != "") {
      dir = ' --DIR=' + dir;
    } else {
      swal({
        title: "Attention !",
        text: "Vous n'avez pas specifié votre dossier de Téléchargements",
        icon: "error",
        button: "D'accord",
      });
      return false;
    }
    if (last != "") {
      last = ' --URLLASTSTABLEVERSION=' + last;
    } else {
      swal({
        title: "Attention !",
        text: "Vous n'avez pas specifié L'url de la dernière version stable",
        icon: "error",
        button: "D'accord",
      });
      return false;
    }
    if (target != "") {
      target = ' --RCTARGET=' + target;
    } else {
      swal({
        title: "Attention !",
        text: "Vous n'avez pas specifié le dernier répertoire d'emplacement de la version stable",
        icon: "error",
        button: "D'accord",
      });
      return false;
    }
    if (link != null && link.value != "") {
      link = ' --RCLINK=' + link.value;
    } else if (link != null && link.value == "") {
      swal({
        title: "Attention !",
        text: "Vous devez spécifier le lien de téléchargement ( Si vous avez téléchargé le fichier veuillez décocher RC_LINK et donner le chemin vers le fichier en cochant FILE_NAME)",
        icon: "error",
        button: "D'accord",
      });
      return false;


    } else {
      link = '';
    }
    console.log(link);




    if (url != null && url.value != "") {
      url = ' --URL=' + url.value;
    } else {
      url = '';
    }
    if (language != null && language.value != "") {
      language = ' --LANGUAGE=' + language.value;
    } else {
      language = '';
    }
    if (country != null && country.value != "") {
      country = ' --COUNTRY=' + country.value;
    } else {
      country = '';
    }
    if (db_s != null && db_s.value != "") {
      db_s = ' --DB_SERVER=' + db_s.value;
    } else {
      db_s = '';
    }
    if (db_u != null && db_u.value != "") {
      db_u = ' --DB_USER=' + db_u.value;
    } else {
      db_u = '';
    }
    if (db_p != null && db_p.value != "") {
      db_p = ' --DB_PASSWORD=' + db_p.value;
    } else {
      db_p = '';
    }
    if (db_ep != null && db_ep.value != "") {
      db_ep = ' --DB_EMPTY_PASSWORD=' + db_ep.value;
    } else {
      db_ep = '';
    }
    if (fileName != null && fileName.value != "") {
      fileName = ' --FILENAME=' + fileName.value;
    } else if (fileName != null && fileName.value == "") {
      swal({
        title: "Attention !",
        text: "Vous devez spécifier le dossier où vous avez téléchargé le fichier ( Si vous n'avez pas téléchargé le fichier veuillez décocher FILE_NAME et donner le lien de téléchargement en cochant RC_LINK)",
        icon: "error",
        button: "D'accord",
      });
      return false;


    } else {
      fileName = '';
    }

    var cmd = 'npm run install-upgrade-test --' + dir + last + target + link + url + language + country + db_s + db_u +
      db_p + db_ep + fileName + headless;
    swal({
      title: "Votre commande est :",
      text: cmd,
      icon: "success",
      button: "D'accord",
    });
  }
  /////////**** test specifique ********///////
  function generateCmd1() {
    headless1 = document.getElementById('headless1');
    dir1 = document.getElementById('idDir1').value;
    last1 = document.getElementById('idLast1').value;
    target1 = document.getElementById('idTarget1').value;
    link1 = document.getElementById('idLink1');
    url1 = document.getElementById('idUrl1');
    language1 = document.getElementById('idLan1');
    country1 = document.getElementById('idCou1');
    db_s1 = document.getElementById('idDbS1');
    db_u1 = document.getElementById('idDbU1');
    db_p1 = document.getElementById('idDbP1');
    db_ep1 = document.getElementById('idDbEP1');
    file1 = document.getElementById('idFile1');
    var selectBox = document.getElementById("PathSelect");
    var path = selectBox.options[selectBox.selectedIndex].value;
    var selectBox2 = document.getElementById("Myselect");
    if (selectBox2 != null) {
      file = '/' + selectBox.options[selectBox.selectedIndex].value;
    } else {
      file = '';
    }
    if (headless1.checked) {
      headless1 = ' --HEADLESS=true';
    } else {
      headless1 = '';
    }
    if (dir1 != "") {
      dir1 = ' --DIR=' + dir1;
    } else {
      swal({
        title: "Attention !",
        text: "Vous n'avez pas specifié votre dossier de Téléchargements",
        icon: "error",
        button: "D'accord",
      });
      return false;
    }
    if (last1 != "") {
      last1 = ' --URLLASTSTABLEVERSION=' + last1;
    } else {
      swal({
        title: "Attention !",
        text: "Vous n'avez pas specifié L'url de la dernière version stable",
        icon: "error",
        button: "D'accord",
      });
      return false;
    }
    if (target1 != "") {
      target1 = ' --RCTARGET=' + target1;
    } else {
      swal({
        title: "Attention !",
        text: "Vous n'avez pas specifié le dernier répertoire d'emplacement de la version stable",
        icon: "error",
        button: "D'accord",
      });
      return false;
    }
    if (link1 != null && link1.value != "") {
      link1 = ' --RCLINK=' + link1.value;
    } else if (link1 != null && link1.value == "") {
      swal({
        title: "Attention !",
        text: "Vous devez spécifier le lien de téléchargement ( Si vous avez téléchargé le fichier veuillez décocher RC_LINK et donner le chemin vers le fichier en cochant FILE_NAME)",
        icon: "error",
        button: "D'accord",
      });
      return false;


    } else {
      link1 = '';
    }
    if (url1 != null && url1.value != "") {
      url1 = ' --URL=' + url1.value;
    } else {
      url1 = '';
    }
    if (language1 != null && language1.value != "") {
      language1 = ' --LANGUAGE=' + language1.value;
    } else {
      language1 = '';
    }
    if (country1 != null && country1.value != "") {
      country1 = ' --COUNTRY=' + country1.value;
    } else {
      country1 = '';
    }
    if (db_s1 != null && db_s1.value != "") {
      db_s1 = ' --DB_SERVER=' + db_s1.value;
    } else {
      db_s1 = '';
    }
    if (db_u1 != null && db_u1.value != "") {
      db_u1 = ' --DB_USER=' + db_u1.value;
    } else {
      db_u1 = '';
    }
    if (db_p1 != null && db_p1 != "") {
      db_p1 = ' --DB_PASSWORD=' + db_p1.value;
    } else {
      db_p1 = '';
    }
    if (db_ep1 != null) {
      db_ep1 = ' --DB_EMPTY_PASSWORD=' + db_ep1.value;
    } else {
      db_ep1 = '';
    }
    if (file1 != null && file1.value != "") {
      file1 = ' --FILENAME=' + file1.value;
    } else if (file1 != null && file1.value == "") {
      swal({
        title: "Attention !",
        text: "Vous devez spécifier le dossier où vous avez téléchargé le fichier ( Si vous n'avez pas téléchargé le fichier veuillez décocher FILE_NAME et donner le lien de téléchargement en cochant RC_LINK)",
        icon: "error",
        button: "D'accord",
      });
      return false;
    } else {
      file1 = '';
    }
    var cmd1 = 'path=install_upgrade /' + path + file + ' npm run specific-test --' + dir1 + last1 + target1 + link1 +
      url1 + language1 + country1 + db_s1 + db_u1 + db_p1 + db_ep1 + file1 + headless1;
    swal({
      title: "Votre commande est :",
      text: cmd1,
      icon: "success",
      button: "D'accord",
    });
  }
</script>

<ul id="list1" hidden>
  {% set nb = 0 %} {% for file in list1 %} {% set nb = nb + 1 %}
  <li data-value="{{file}}" id="li{{ nb }}" hidden>{{file}}
    </option>
    {% endfor %}
  </li>
</ul>
<hr>
<div class="row">
  <div class="col-4">
    <div class="list-group" id="list-tab" role="tablist">
      <a class="list-group-item list-group-item-action active" id="list-home-list" data-toggle="list" href="#list-reg" role="tab"
        aria-controls="home">Test d'auto install-upgrade complet</a>
      <a class="list-group-item list-group-item-action" id="list-profile-list" data-toggle="list" href="#list-spec" role="tab"
        aria-controls="profile">Test d'auto install-upgrade Spécifique</a>
      <a class="list-group-item list-group-item-action" id="list-messages-list" data-toggle="list" href="#list-messages" role="tab"
        aria-controls="messages">informations utiles</a>

    </div>
  </div>
  <div class="col-8">
    <div class="tab-content" id="nav-tabContent">
      <div class="tab-pane fade show active" id="list-reg" role="tabpanel" aria-labelledby="list-home-list">

        <form action="{{path('prestaShop_test_aff_install')}}" class="form-horizontal">
          <div class="alert alert-danger" role="alert" id="headAlert" hidden>
            <h4 class="alert-heading">
              <i class="fas fa-exclamation-triangle"></i> Mode HEADLESS !</h4>
            <hr>
            <p>
              Cette option ne fonctionnera pas parfaitement si votre version de chrome est sous
              <b>62.0.3175.0</b>, en particulier pour les tests de
              <b>catégorie</b>,
              <b>d'attribut</b> et
              <b>de fonctionnalités.</b>
            </p>
          </div>
          <div class="alert alert-info" role="alert" id="idInfo">

            <h5>Si vous souhaitez lancer vos tests en mode Headless, cliquez ici : </h5>
            <input class="toggle" id="headless" name="headless" onchange='handleChangeHead(this);' type="checkbox" />

          </div>
          <div class="card card-body">
            <p>Veuiller cocher les champs optionels désirés</p>
            <table>
              <tr>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="url" id="url" onchange='handleChangeUrl(this);'>
                    <label class="form-check-label" for="url">
                      Url
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="language" id="language" onchange='handleChangeLan(this);'>
                    <label class="form-check-label" for="language">
                      Language
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="country" id="country" onchange='handleChangeCou(this);'>
                    <label class="form-check-label" for="country">
                      Country
                    </label>
                  </div>
                </td>
              </tr>
              <tr>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbServer" id="dbServer" onchange='handleChangeDbS(this);'>
                    <label class="form-check-label" for="dbServer">
                      DbServer
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbUser" id="dbUser" onchange='handleChangeDbU(this);'>
                    <label class="form-check-label" for="dbUser">
                      DbUser
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbPwd" id="dbPwd" onchange='handleChangePwd(this);'>
                    <label class="form-check-label" for="dbPwd">
                      DbPwd
                    </label>
                  </div>
                </td>
              </tr>
              <tr>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbEmptyPwd" id="dbEmptyPwd" onchange='handleChangeEPwd(this);'>
                    <label class="form-check-label" for="dbEmptyPwd">
                      DbEmptyPwd
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="rcLink" id="rcLink" onchange='handleChangeLink(this);' checked>
                    <label class="form-check-label" for="rcLink">
                      RC_LINK
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="fileName" id="fileName" onchange='handleChangeFile(this);'>
                    <label class="form-check-label" for="fileName">
                      File Name
                    </label>
                  </div>
                </td>
              </tr>
            </table>
          </div>
          <br>
          <div class="form-group" id="divDir">
            <label for="idDir">Dir (REQUIRED):</label>
            <input type="text" class="form-control" id="idDir" name="dir" placeholder="Votre dossier de Téléchargements (exp: /home/toto/Downloads/)"
              required>
          </div>
          <div class="form-group" id="divLast">
            <label for="idLast">Url Last Stable Version (REQUIRED):</label>
            <input type="text" class="form-control" id="idLast" placeholder="Sans ' http:// '" name="last" required>
          </div>
          <div class="form-group" id="divTarget">
            <label for="idTarget">RC_Target (REQUIRED):</label>
            <input type="text" class="form-control" id="idTarget" placeholder="Dernier répertoire d'emplacement de la version stable (exemple: / project / prestashop1724 /)"
              name="target" required>
          </div>

          <div class="form-group" id="divLink">
            <label for="idLink" id="idLinkLabel">RC_LINK:</label>
            <input type="text" class="form-control" id="idLink" placeholder="RC Download link" name="link" required>
            <small id="LinkHelp" class="form-text text-muted">si vous avez déjà téléchargé la RC, vous devez copier le fichier ZIP dans le fichier --RCTARGET admin-dev / autoupgrade
              / download / et définir l'option FILENAME.</small>
          </div>
          <div class="form-group" id="divUrl" hidden></div>
          <div class="form-group" id="divFile" hidden></div>
          <div class="form-group" id="divLan" hidden></div>
          <div class="form-group" id="divCou" hidden></div>
          <div class="form-group" id="divDbS" hidden></div>
          <div class="form-group" id="divDbU" hidden></div>
          <div class="form-group" id="divDbP" hidden></div>
          <div class="form-group" id="divDbEP" hidden></div>


          <div class="input-group mb-3" id="divBtn">
            <input type="submit" class="btn btn-primary btn-block" value="Lancer le Test">
          </div>
        </form>
        <button class="btn btn-warning btn-block" id="genBtn" onclick="generateCmd()">Générer la commande</button>
        <br>
      </div>
      <div class="tab-pane fade" id="list-spec" role="tabpanel" aria-labelledby="list-profile-list">
        <div class="alert alert-danger" role="alert" hidden id="alertId">
          <h5 class="alert-heading">
            <i class="fas fa-exclamation-triangle"></i> Attention!</h5>
          <hr> Si vous voulez lancer le test avec le Path
          <b> install_upgrade/01_install.js</b> avec le paramétrage de la langue et le pays respectivement différent de
          <b>"en"</b> et
          <b>"France"</b>, vous devez
          <b>réinstaller</b> PrestaShop en
          <b>Anglais</b> en choisissant la
          <b> France</b> comme pays pour que vous puissez lancer les autres tests.
        </div>
        <form action="{{path('prestaShop_test_aff_spec_install')}}" id="divTest" class="form-horizontal">
          <div class="alert alert-danger" role="alert" id="headAlert1" hidden>
            <h4 class="alert-heading">
              <i class="fas fa-exclamation-triangle"></i> Mode HEADLESS !</h4>
            <hr>
            <p>
              Cette option ne fonctionnera pas parfaitement si votre version de chrome est sous
              <b>62.0.3175.0</b>, en particulier pour les tests de
              <b>catégorie</b>,
              <b>d'attribut</b> et
              <b>de fonctionnalités.</b>
            </p>
          </div>
          <div class="alert alert-info" role="alert" id="idInfo1">

            <h5>Si vous souhaitez lancer vos tests en mode Headless, cliquez ici : </h5>
            <input class="toggle" id="headless1" name="headless1" onchange='handleChangeHead1(this);' type="checkbox" />

          </div>
          <div class="card card-body">
            <p>Veuiller cocher les champs optionels désirés</p>
            <table>
              <tr>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="url" id="url1" onchange='handleChangeUrl1(this);'>
                    <label class="form-check-label" for="url1">
                      Url
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="language" id="language1" onchange='handleChangeLan1(this);'>
                    <label class="form-check-label" for="language">
                      Language
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="country" id="country1" onchange='handleChangeCou1(this);'>
                    <label class="form-check-label" for="country1">
                      Country
                    </label>
                  </div>
                </td>
              </tr>
              <tr>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbServer" id="dbServer1" onchange='handleChangeDbS1(this);'>
                    <label class="form-check-label" for="dbServer1">
                      DbServer
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbUser" id="dbUser1" onchange='handleChangeDbU1(this);'>
                    <label class="form-check-label" for="dbUser1">
                      DbUser
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbPwd" id="dbPwd1" onchange='handleChangePwd1(this);'>
                    <label class="form-check-label" for="dbPwd1">
                      DbPwd
                    </label>
                  </div>
                </td>
              </tr>
              <tr>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="dbEmptyPwd" id="dbEmptyPwd1" onchange='handleChangeEPwd1(this);'>
                    <label class="form-check-label" for="dbEmptyPwd1">
                      DbEmptyPwd
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="rcLink" id="rcLink1" onchange='handleChangeLink1(this);' checked>
                    <label class="form-check-label" for="rcLink1">
                      RC_LINK
                    </label>
                  </div>
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="fileName" id="fileName1" onchange='handleChangeFile1(this);'>
                    <label class="form-check-label" for="fileName1">
                      File Name
                    </label>
                  </div>
                </td>
              </tr>
            </table>
          </div>
          <div class="form-group">
            <label for="PathSelect">Path :</label>
            <select class="form-control" id="PathSelect" name="path" onchange="changeFunc()">

              <option value="" disabled selected>-- Selectionner le path --</option>
              {% set nb = 1 %} {% for path in list %} {% set nb = nb + 1 %}
              <option value="{{path}}" id="{{ nb }}">{{path}}</option>
              {% endfor %}
            </select>
          </div>
          <div class="form-group" id="DivToAdd1"></div>


          <div class="form-group" id="divDir1">
            <label for="idDir1">Dir (REQUIRED):</label>
            <input type="text" class="form-control" id="idDir1" name="dir1" placeholder="Votre dossier de Téléchargements (exp: /home/toto/Downloads/)"
              required>
          </div>
          <div class="form-group" id="divLast1">
            <label for="idLast1">Url Last Stable Version (REQUIRED):</label>
            <input type="text" class="form-control" id="idLast1" placeholder="Sans ' http:// '" name="last1" required>
          </div>
          <div class="form-group" id="divTarget1">
            <label for="idTarget1">RC_Target (REQUIRED):</label>
            <input type="text" class="form-control" id="idTarget1" placeholder="Dernier répertoire d'emplacement de la version stable (exemple: / project / prestashop1724 /)"
              name="target1" required>
          </div>

          <div class="form-group" id="divLink1">
            <label for="idLink1" id="idLinkLabel1">RC_LINK:</label>
            <input type="text" class="form-control" id="idLink1" placeholder="RC Download link" name="link1" required>
            <small id="LinkHelp1" class="form-text text-muted">si vous avez déjà téléchargé la RC, vous devez copier le fichier ZIP dans le fichier --RCTARGET admin-dev / autoupgrade
              / download / et définir l'option FILENAME.</small>
          </div>
          <div class="form-group" id="divUrl1" hidden></div>
          <div class="form-group" id="divFile1" hidden></div>
          <div class="form-group" id="divLan1" hidden></div>
          <div class="form-group" id="divCou1" hidden></div>
          <div class="form-group" id="divDbS1" hidden></div>
          <div class="form-group" id="divDbU1" hidden></div>
          <div class="form-group" id="divDbP1" hidden></div>
          <div class="form-group" id="divDbEP1" hidden></div>

          <br>
          <div class="input-group mb-3" id="divBtn1">
            <input type="submit" class="btn btn-primary btn-block" value="Lancer le Test">
          </div>
        </form>
        <button class="btn btn-warning btn-block" id="genBtn1" onclick="generateCmd1()">Générer la commande</button>
      </div>
      <div class="tab-pane fade" id="list-messages" role="tabpanel" aria-labelledby="list-messages-list">Ici des informations utiles
      </div>




    </div>

  </div>


  {% endblock %}